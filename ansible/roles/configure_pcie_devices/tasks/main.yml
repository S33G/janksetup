- name: "add grub linux command line options"
  ansible.builtin.lineinfile:
    dest: "/etc/default/grub"
    state: present
    line: "GRUB_CMDLINE_LINUX_DEFAULT=\"{{ linux_cmdline['cpu'][cpu_manufacturer] }}{{ linux_cmdline['iommu_passthrough'][iommu_passthrough] }}{{ linux_cmdline['disable_vga'][disable_vga] }}{{ linux_cmdline['initcall_blacklist'][initcall_blacklist] }}{{ linux_cmdline['acs_override'][acs_override] }}vfio_pci.ids={{ vfio_pci_ids | join(',') }}{{ (' '+linux_cmdline_extra_args) if linux_cmdline_extra_args else '' }}\""
    regexp: "^GRUB_CMDLINE_LINUX_DEFAULT"
  notify:
   - Update grub
   - Reboot pve

- name: "Add vfio modules"
  ansible.builtin.blockinfile:
    path: /etc/modules
    marker: "# {mark} VFIO ANSIBLE MANAGED BLOCK "
    block: |
      vfio
      vfio_iommu_type1
      vfio_pci
      vfio_virqfd
  notify:
    - Update initramfs
    - Reboot pve

- name: "Allow iommu unsafe interrupts"
  ansible.builtin.lineinfile:
    dest: "/etc/modprobe.d/iommu_unsafe_interrupts.conf"
    state: present
    line: "options vfio_iommu_type1 allow_unsafe_interrupts=1"
    regexp: "^options vfio_iommu_type1"
  notify:
    - Update initramfs
    - Reboot pve

- name: "kvm interrupt remapping"
  ansible.builtin.lineinfile:
    dest: "/etc/modprobe.d/kvm.conf"
    state: present
    line: "options kvm ignore_msrs=1"
    regexp: "^options kvm"
  notify:
    - Update initramfs
    - Reboot pve

- name: "Add blacklist drivers"
  ansible.builtin.blockinfile:
    path: /etc/modprobe.d/blacklist.conf
    marker: "# {mark} VFIO ANSIBLE MANAGED BLOCK "
    block: |
      blacklist radeon
      blacklist nouveau
      blacklist nvidia
  notify:
    - Update initramfs
    - Reboot pve
